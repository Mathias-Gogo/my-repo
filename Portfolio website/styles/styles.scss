//**********Mixins************

// Box Shadow
@mixin box-shadow($x, $y, $blur, $color) {
    box-shadow: $x $y $blur $color;
  }
  
  // Transition
  @mixin transition($property, $duration, $timing-function) {
    transition: $property $duration $timing-function;
  }
  
  // Flexbox
  @mixin flexbox($display, $justify-content, $align-items, $flex-direction) {
    display: $display;
    justify-content: $justify-content;
    align-items: $align-items;
    flex-direction: $flex-direction;
  }
  
  // Grid
  @mixin grid($display: grid, $grid-template-columns: 1fr, $grid-gap: 10px) {
    display: $display;
    grid-template-columns: $grid-template-columns;
    grid-gap: $grid-gap;
  }
  
  // Responsive Breakpoints
  @mixin breakpoint($breakpoint) {
    @if $breakpoint == desktop {
      @media (min-width: 1200px) {
        @content;
      }
    } @else if $breakpoint == tablet {
      @media (min-width: 768px) and (max-width: 1199px) {
        @content;
      }
    } @else if $breakpoint == mobile {
      @media (max-width: 767px) {
        @content;
      }
    }
  }
  
  // Border Radius
  @mixin border-radius($radius) {
    border-radius: $radius;
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
  }
  
  // Box Sizing
  @mixin box-sizing($sizing: border-box) {
    box-sizing: $sizing;
    -webkit-box-sizing: $sizing;
    -moz-box-sizing: $sizing;
  }
  
  // Opacity
  @mixin opacity($opacity) {
    opacity: $opacity;
    filter: alpha(opacity=$opacity * 100);
  }
  
  // Background Image
  @mixin background-image($image, $position: center, $size: cover) {
    background-image: url($image);
    background-position: $position;
    background-size: $size;
    background-repeat: no-repeat;
  }


//**********Variables and Maps*************
$primary-color: #c7f022; // Main yellow color
$secondary-color: #ffffff; // White color
$background-color: #f7f7f7; // Light gray background color
$text-color: #333333; // Dark gray text color
$accent-color: #666666; // Medium gray accent color

// Color palette
$colors: (
  primary: $primary-color,
  secondary: $secondary-color,
  background: $background-color,
  text: $text-color,
  accent: $accent-color
);

  
//Main code starts here 
  *{
    padding: 0;
    margin: 0;
    font-family: "Poppins", serif;
    font-weight: 400;
    font-style: normal;
}

body {
    background-color: map-get($colors, background);
    color: map-get($colors, text);
  }
  
.container{
    @include flexbox(flex, center, flex-start, column);
    width: 100%;

    .header{
        @include flexbox(flex, space-between, center, row);
        width: 100%;
        padding: 10px 0;

        a{
            text-decoration: none;
            color: map-get($colors, text);
        }
        
        :nth-child(even){
            padding: 0 20px;
        }

        :nth-child(odd){
            padding: 0 10px;
        }

        .header-nav-top-left{
            @include flexbox(flex, space-between, center, row);
        }

        .header-nav-end{
            @include flexbox(flex, space-between, center, row);

            .contact-link a{
                @include flexbox(flex, center, center, row);
            }

            button{
                @include flexbox(flex, center, center, row);
                padding: 10px 20px;
                @include border-radius(20px);
                border: none;
                color: map-get($colors, secondary);
                background-color: map-get($colors, text);
                @include transition(transform, 0.3s, ease-in-out);

                &:active{
                   background-color: map-get($colors, primary);
                   color: map-get($colors, text);
                }

                &:hover{
                    transform: scale(0.9);
                }
            }
        }
    }
}

.main{
    padding: 0;
    @include flexbox(flex, space-between, center, column);
    width: 100%;
    border: 1px solid;

    .figure{
        @include flexbox(flex, space-between, flex-end, row);
        width: 100%;
        background-image: url(backdrop/Premium\ Vector\ _\ Programming\ and\ developers\ vector\ seamless\ pattern\ and\ Internet\ and\ coding.jpeg);
        backdrop-filter: blur(50px);
        background-position: center;

        .figblur{
            @include flexbox(flex, space-between, flex-end, row);
            backdrop-filter: blur(0.7px);
            background-position: center;
            background-color: map-get($color, background);

            .figcaption{
                font-weight: 600;
                font-size: 34px;
                margin: 0 0 80px 0;
                padding: 0 30px;
    
                button{
                    @include flexbox(flex, center, center, row);
                    padding: 10px 20px;
                    font-size: 17px;
                    @include border-radius(20px);
                    border: none;
                    color: map-get($colors, text);
                    background-color: map-get($colors, primary);
                    @include transition(transform, 0.3s, ease-in-out);
    
                    &:active{
                       background-color: map-get($colors, text);
                       color: map-get($colors, secondary);
                    }
    
                    &:hover{
                        transform: scale(0.9);
                    }
                }
            }
        }

        img{
            width: 800px;
        }
    }
}